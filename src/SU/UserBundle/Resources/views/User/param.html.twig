{% extends 'SUMainBundle::layout.html.twig' %}

{% set menu_selected = 'param' %}

{% block body %}
<div class="container">
	<div class="row">
		<div class="col l8 offset-l2 m10 offset-m1 s12" style="margin-top: 10px; padding-righ">
			<div class="col s12 card" style="padding: 0px; border: 1px solid #75828E;">
				<section id="history_header" class="kj-grey" style="border-radius: 2px;">
					<div class="row" style="margin-bottom: 0px;">
						<div class="col s12 white-text">
							<h5 class="col s12"><i class="fa fa-gears left"></i>Paramètres</span>
							</h5>
						</div>
					</div>
				</section>
				<section class="col s12" style="padding: 30px;">
					<div id="param_info" class="row">
						<div class="col s12 m8 verticalcenter">
							<h5 style="border-bottom: 1px solid #75828E;"><small><i class="fa fa-info-circle"></i> Informations</small></h5>
							<p class="saisie center-align">
								<span><b><big>{{ app.user.firstName }} {{ app.user.lastName }}</big></b></span>
								</br>
								Nombre de comptes : <span>{{ app.user.getAccounts()|length }}</span>
								</br>
								<i class="fa fa-calendar"></i> Dernière connexion : <span>{{ app.user.lastLogin|date("d-m-Y") }}</span>
								</br>
								<i class="fa fa-envelope"></i> Email : <span>{{ app.user.email }}</span>
							</p>
						</div>
						<div class="col s8 offset-s2 m3 offset-m1 l3 offset-l1">
							<img id="param_img" src="{{ app.request.getSchemeAndHttpHost() ~ asset('img/design/logo-min.png') }}" class="responsive-img"></img>
						</div>
					</div>
					<div class="col s12">
						<h5 style="border-bottom: 1px solid #75828E;"><small><i class="fa fa-book"></i> Vos comptes</small></h5>
						<p class="saisie">
							Dans cette section vous pouvez gérer vos comptes, en ajouter de nouveaux ou en supprimer. Donner à un compte le type "Principal" fait de lui le compte par défaut qui sera sélectionné à la connexion au site. C'est en générale le compte courant, celui avec lequel vous ferez le plus d'opérations.
							</br>
						</p>
						<table class="striped highlight centered responsive-table">
							<thead>
								<tr>
									<th>Nom du compte</th>
									<th>Type</th>
									<th>Action</th>
								</tr>
							</thead>
							
							<tbody id="account_table">
								{% if app.user.getAccounts()|length == 0 %}
									<tr class="ligne">
										<td><em>Vide</em></td>
										<td><em>Vide</em></td>
										<td><em>Vide</em></td>
									</tr>
								{% endif %}
								{% for account in app.user.getAccounts() %}
									<tr class="ligne">
										<td>{{ account.name }}</td>
										<td class="ac_priority">{{ account.acPriority }}</td>
										<td>
											<a data-id="{{ account.id }}" class="btn waves-effect waves-light link-hover cardinal-button delete-ac"><i class="fa fa-times left hide-on-small-only"></i>Supprimer</a>
										</td>
									</tr>
								{% endfor %}
							</tbody>
						</table>
						<br>
						<div class="center-align">
							<a id="new_account_button" class="btn waves-effect waves-light link-hover cardinal-button"><i class="fa fa-plus left"></i>Nouveau compte</a>
						</div>
						<br><br>
						<div class="center-align" style="background-color: #f0f0f0; border-radius: 5px; padding: 5px; color: black; border: 1px solid #d0d0d0"><b><big><i class="fa fa-warning"></i> Aide :</big></b> Pour changer le compte principal sélectionné par défaut quand vous vous connectez, il vous suffit de cliquer sur "Changer le compte principal".</div>
						<br>
						<div class="center-align">
							<form id="select_ac_priority">
								<div class="col s12 m10 l6 offset-m1 offset-l3">
									<label>Compte principal</label>
									<select class="browser-default" name="ac_priority" id="ac_priority">
										<option value="default" disabled selected>Choisissez le compte principal</option>
										{% for account in app.user.getAccounts() %}
											<option value="{{ account.name }}">{{ account.name }}</option>
										{% endfor %}
									</select>
								</div>
								<div class="col s12" style="margin-bottom: 20px;">
									<br>
									<button type="submit" id="principal_ac_button" class="btn waves-effect waves-light link-hover cardinal-button truncate"><i class="fa fa-refresh left"></i>Changer le compte principal</a>
								</div>
							</form>
						</div>
					</div>
					<div class="col s12">
						<h5 style="border-bottom: 1px solid #75828E;"><small><i class="fa fa-list-ul"></i> Catégories</small></h5>
						<p class="saisie">
							Les catégories vous permettent de grouper vos dépenses ou vos sources de revenues pour les ajouter plus facilement et avoir des graphes de synthèse plus clairs. Vous pouvez ajouter autant de catégories que vous le voulez. Les catégories peuvent être utilisées avec tous vos comptes.
							</br>
						</p>
						<div class="center-align" style="background-color: #f0f0f0; border-radius: 5px; padding: 5px; color: black; border: 1px solid #d0d0d0"><b><big><i class="fa fa-warning"></i> ATTENTION :</big></b> Supprimer une catégorie provoque la supression de toutes les opérations qui sont liées à cette catégorie, sur tous vos comptes à la fois !!</div>
						<br>
						<table class="striped highlight centered responsive-table">
							<thead>
								<tr>
									<th>Catégorie</th>
									<th>Edition</th>
									<th>Suppression</th>
								</tr>
							</thead>
							
							<tbody id="category_table">
							{% if app.user.getCategories()|length == 0 %}
								<tr class="ligne">
									<td><em>Vide</em></td>
									<td><em>Vide</em></td>
									<td><em>Vide</em></td>
								</tr>
							{% endif %}
							{% for category in app.user.getCategories() %}
								<tr class="ligne ligne-category" data-id="{{ category.getId() }}">
									<td class="category-name">{{ category.name }}</td>
									<td>
										<a data-id="{{ category.id }}" class="btn waves-effect waves-light link-hover cardinal-button edit-category truncate"><i class="fa fa-edit left hide-on-small-only"></i>Renommer</a>
									</td>
									<td>
										<a data-id="{{ category.id }}" class="btn waves-effect waves-light link-hover cardinal-button delete-category truncate"><i class="fa fa-times left hide-on-small-only"></i>Supprimer</a>
									</td>
								</tr>
							{% endfor %}
							</tbody>
						</table>
						<br>
						<div class="center-align">
							<form id="new_category_form">
								<div class="input-field col s12 l6 offset-l3">
									<input placeholder="Catégorie" id="new_category" type="text" class="" name="new_category">
									<label for="new_category">Nouvelle catégorie</label>
								</div>
								<div class="col s12">
									<button type="submit" id="add_new_category" class="btn waves-effect waves-light link-hover cardinal-button"><i class="fa fa-plus left"></i>Ajouter</a>
								</div>
							</form>
						</div>
					</div>
					<div class="col s12">
						<h5 style="border-bottom: 1px solid #75828E;"><small><i class="fa fa-gears"></i> Paramètres utilisateur</small></h5>
						<p class="saisie">
							<form id="user_update_form">
								<div class="input-field col s12 l6 offset-l3">
									<input placeholder="{{ app.user.firstName }}" id="first_name" type="text" class="">
									<label for="first_name">Prénom</label>
								</div>
								<div class="input-field col s12 l6 offset-l3">
									<input placeholder="{{ app.user.lastName }}" id="last_name" type="text" class="">
									<label for="last_name">Nom</label>
								</div>
								<div class="input-field col s12 l6 offset-l3">
									<input placeholder="****" id="pass1" type="password" class="">
									<label for="pass1">Mot de passe</label>
								</div>
								<div class="input-field col s12 l6 offset-l3">
									<input placeholder="****" id="pass2" type="password" class="">
									<label for="pass2">Mot de passe (confirmation)</label>
								</div>
								<div class="input-field col s12 l6 offset-l3">
									<input placeholder="{{ app.user.email }}" id="mail1" type="email" class="">
									<label for="mail1">Adresse mail:</label>
								</div>
								<div class="input-field col s12 l6 offset-l3">
									<input placeholder="{{ app.user.email }}" id="mail2" type="email" class="">
									<label for="mail2">Adresse mail (confirmation):</label>
								</div>
								<div class="col s12 center-align">
									<button id="send_user_update" type="submit" class="btn-large btn-body waves-effect waves-light link-hover cardinal-button"><i class="fa fa-send left"></i>Envoyer</button>
								</div>
							</form>
						</p>
					</div>
				</section>
			</div>
		</div>
	</div>
</div>
{% endblock %}

{% block javascript %}
	{{ parent() }}
	<script>
		function param_init() {
			if ($(window).width() >= 960) {
				if (!$('#param_info').children().hasClass('verticalcenter')) {
					$('#param_info').children().addClass('verticalcenter');
				}
				$('#param_info').height($('#param_img').height());
			} else {
				$('#param_info').children().removeClass('verticalcenter');
			}
		}
		function becomesValid(elem) {
			if (!elem.hasClass("valid")) {
				elem.removeClass("invalid").addClass("valid");
			} else {
				elem.removeClass("invalid");
			}
		}
		function becomesInvalid(elem) {
			if (!elem.hasClass("invalid")) {
				elem.removeClass("valid").addClass("invalid");
			} else {
				elem.removeClass("valid");
			}
		}
		
		function prepare_cat_deletion() {
			$('.delete-category').off('click');
			$('.delete-category').click(function() {
				$cat_id = $(this).attr('data-id');
				$.post(
					'{{ path("su_account_delete_category") }}',
					{
						category_id: $cat_id
					},
					function(rep) {
						if (rep.notif == 'category_deleted') {
							$('#category_table').children().find('a').each(function() {
								if ($(this).attr('data-id') == $cat_id) {
									$(this).parent().parent().remove();
								}
							});
							if ($('#category_table').children().length == 0) {
								$('#category_table').append("<tr><td><em>Vide</em></td><td><em>Vide</em></td><td><em>Vide</em></td></tr>");
							}
							Materialize.toast("Catégorie supprimée", 5000);
						} else {
							Materialize.toast('Ooops ... une erreur est survenue ...', 5000);
							console.log(rep.message);
						}
					}
				);
			});
		}
		
		function prepare_ac_deletion() {
			$('.delete-ac').off('click');
			$('.delete-ac').click(function() {
				var account_id = $(this).attr('data-id');
				$.post(
					'{{ path("su_account_delete_account") }}',
					{
						account_id: account_id
					},
					function(rep) {
						if (rep.notif == 'account_deleted') {
							var to_delete = "";
							$('#account_table').children().find('a').each(function() {
								if ($(this).attr('data-id') == account_id) {
									to_delete = $(this).parent().prev().prev().html();
									$(this).parent().parent().remove();
								}
							});
							$('#ac_priority').children().each(function() {
								if ($(this).html() == to_delete) {
									$('#ac_priority').children().first().attr('selected', "");
									$('#ac_priority').val("default");
									$(this).remove();
								}
							});
							$('#drop_accounts').find('span').each(function() {
								if ($(this).html() == to_delete) {
									$(this).parent().parent().remove();
								}
							});
							if ($('#account_table').children().length == 0) {
								$('#account_table').append("<tr><td><em>Vide</em></td><td><em>Vide</em></td><td><em>Vide</em></td></tr>");
							}
							Materialize.toast("Compte supprimé", 5000);
						} else {
							Materialize.toast('Ooops ... une erreur est survenue ...', 5000);
							console.log(rep.message);
						}
					}
				);
			});
		}
		
		function prepare_cat_ligne() {
			$(".ligne-category").off("dblclick");
			$(".ligne-category").dblclick(function() {
				prepare_cat_ligne_aux($(this));
			});
			
			$(".edit-category").off("click");
			$(".edit-category").click(function() {
				prepare_cat_ligne_aux($(this).parent().parent());
			});
		}
		
		function prepare_cat_ligne_aux(ligne) {
			if ($('.edited-ligne').size() >= 1) {
				$('.edited-ligne').find('.cancel-category').trigger('click');
			}
			ligne.addClass('edited-ligne');
			var categoryId = ligne.attr('data-id');
			var categoryName = ligne.find('.category-name').html();
			var ligne_sav_edit = ligne.find('.edit-category');
			
			ligne.find('.category-name').html('<input type="text" class="center-align name-input" value="'+categoryName+'">');
			ligne.find('.edit-category').parent().html('<a data-id="'+categoryId+'" class="btn waves-effect waves-light link-hover green-button ok-category truncate"><i class="fa fa-check"></i></a><a data-id="'+categoryId+'" class="btn waves-effect waves-light link-hover cardinal-button cancel-category truncate"><i class="fa fa-times"></i></a>');
			
			ligne.find('.ok-category').click(function() {
				var newName = ligne.find('.name-input').val();
				if ((newName != "") && (!$(this).hasClass('disabled'))) {
					$(this).addClass('disabled');
					$.post(
						"{{ path('su_account_rename_category') }}",
						{
							categoryId: categoryId,
							newName: newName
						},
						function(rep) {
							if (rep.notif == "category_updated") {
								Materialize.toast("Catégorie renommée", 4000);
								ligne.find('.category-name').html(newName);
								ligne.removeClass('edited-ligne');
								ligne.find('.ok-category').parent().html(ligne_sav_edit);
								prepare_cat_ligne();
							} else {
								if (rep.notif == "name_in_use") {
									Materialize.toast("Une de vos catégorie a déjà ce nom", 4000);
									console.log(rep.message);
								} else {
									Materialize.toast("Oops ... Une erreur est survenue ...", 4000);
									console.log(rep.message);
								}
								ligne.find('.cancel-category').trigger('click');
							}
						}
					);
				} else {
					if (newName == "") {
						Materialize.toast("Le nom de la catégorie ne peut pas être vide", 4000);
					}
				}
			});
			
			ligne.find('.cancel-category').click(function() {
				ligne.removeClass('edited-ligne');
				ligne.find('.category-name').html(categoryName);
				ligne.find('.ok-category').parent().html(ligne_sav_edit);
				prepare_cat_ligne();
			});
		}
		
		$(document).ready(function() {
			param_init();
			
			//Vérification & envoie du formulaire utilisateur ------------------------------------------
			$('#first_name, #last_name, #mail1').bind("keyup focusout", function () {
				var valeur = $(this).val();
				if ((valeur != "") && (valeur.length >= 3)) {
					becomesValid($(this));
				} else {
					becomesInvalid($(this));
				}
			});
			
			$('#pass1').keyup(function () {
				var valeur = $(this).val();
				if ((valeur != "") && (valeur.length >= 6)) {
					becomesValid($(this));
				} else {
					becomesInvalid($(this));
				}
			});
			
			$('#pass2').keyup(function () {
				var pass1 = $('#pass1').val();
				var pass2 = $(this).val();
				if ((pass1 == pass2) && (pass1.length >= 6)) {
					becomesValid($(this));
				} else {
					becomesInvalid($(this));
				}
			});
			
			$('#mail2').bind("keyup focusout", function () {
				var mail1 = $('#mail1').val();
				var mail2 = $(this).val();
				if (mail1 == mail2) {
					becomesValid($(this));
				} else {
					becomesInvalid($(this));
				}
			});
			
			$('#user_update_form').submit(function (e) {
				e.preventDefault();
				var firstName = $('#first_name').val();
				var lastName = $('#last_name').val();
				var pass1 = $('#pass1').val();
				var pass2 = $('#pass2').val();
				var mail1 = $('#mail1').val();
				var mail2 = $('#mail2').val();
				if ((firstName != "") && (lastName != "") && (pass1 == pass2) && (pass1 != "") && (mail1 == mail2) && (mail1 != "")) {
					$('#send_user_update').addClass('disabled');
					$.post(
						'{{ path("su_user_update") }}',
						{
							firstName: firstName,
							lastName: lastName,
							pass: pass1,
							mail: mail1
						},
						function (rep) {
							$('#send_user_update').removeClass('disabled');
							if (rep.notif == "account_updated") {
								Materialize.toast("Votre compte a été mis à jour", 5000);
								$(location).attr('href', '{{ path("su_user_param") }}');
							} else {
								Materialize.toast("Ooops, le formulaire n'a pas été accepté ... êtes vous sûr(e) de l'adresse mail?", 6000);
								console.log(rep);
							}
						}
					);
				} else {
					Materialize.toast("Formulaire non valide", 5000);
				}
			});
			//------------------------------------------------------------------------------
			
			//Gestion des catégories -----------------------------------------------------------------------------------
			prepare_cat_deletion();
			
			$('#new_category_form').submit(function(e) {
				e.preventDefault();
				var category_name = $('#new_category').val();
				if (category_name != "") {
					$.post(
						"{{ path('su_account_send_category') }}",
						{
							new_category: category_name
						},
						function(rep) {
							if (rep.notif == "category_added") {
								if ($('#category_table').children().first().children().last().html() == "<em>Vide</em>") {
									$('#category_table').html("");
								}
								$('#category_table').append(rep.html);
								$('#new_category').val("");
								Materialize.toast("Catégorie ajoutée", 5000);
								prepare_cat_deletion();
							} else if (rep.error == "category") {
								Materialize.toast('Vous possédez déjà une catégorie de ce nom!', 5000);
							} else {
								Materialize.toast('Ooops ... une erreur est survenue ...', 5000);
							}
						}
					);
				} else {
					Materialize.toast("Le nom de la catégorie ne peut pas être vide", 5000);
				}
			});
			//----------------------------------------------------------------------------------------------------------
			
			//Gestion des priorité de compte ---------------------------------------------------------------------------
			var previous_principal_ac = $('#ac_priority').val();
			$('#select_ac_priority').submit(function(e) {
				e.preventDefault();
				var principal_ac = $('#ac_priority').val();
				if ((principal_ac != "") && (principal_ac != previous_principal_ac)) {
					$('#principal_ac_button').addClass("disabled");
					$.post(
						"{{ path('su_account_update_principal_ac') }}",
						{
							principal_ac: principal_ac
						},
						function(rep) {
							$('#principal_ac_button').removeClass("disabled");
							if (rep.notif == "principal_ac_updated") {
								Materialize.toast("Compte principal mis à jour", 5000);
								$('.ac_priority').each(function() {
									if ($(this).prev().html() == principal_ac) {
										$(this).html("Principal");
									} else {
										$(this).html("Secondaire");
									}
									previous_principal_ac = principal_ac;
								});
							} else {
								Materialize.toast("Ooops ... une erreur est survenue ...", 5000);
								console.log(rep.message);
							}
						}
					);
				} else {
					if (!principal_ac) {
						Materialize.toast("Aucun compte sélectionné.", 5000);
					} else {
						Materialize.toast("Ce compte est déjà le compte principal.", 5000);
					}
				}
			});
			//----------------------------------------------------------------------------------------------------------
			
			//Suppression de compte ------------------------------------------------------------------------------
			prepare_ac_deletion();
			
			$('#new_account_button').click(function() {
				if ($(window).width() >= 992) {
					$('#new_account_modal').openModal({
						dismissible: true,
						opacity: 0.5,
						in_duration: 250,
						out_duration: 250,
						ready: function() {
							$('#name').off('keyup');
							$('#name').keyup(function () {
								var valeur = $(this).val();
								if ((valeur != "") && (valeur.length >= 3)) {
									becomesValid($(this));
								} else {
									becomesInvalid($(this));
								}
							});
							
							$('#first_amount').off('keyup');
							$('#first_amount').keyup(function() {
								var valeur = parseInt($(this).val());
								if (valeur >= 0) {
									becomesValid($(this));
								} else {
									becomesInvalid($(this));
								}
							});
							
							$('#add_new_account').off('click');
							$('#add_new_account').click(function() {
								var name = $('#name').val();
								var first_amount = parseInt($('#first_amount').val());
								var ac_priority = $('#add_ac_priority_select').val();
								
								if ((name != "") && (name.length >= 3) && (first_amount >= 0) && (ac_priority != null)) {
									$(this).addClass("disabled");
									$.post(
										"{{ path('su_account_send_new_account') }}",
										{
											name: name,
											first_amount: first_amount,
											ac_priority: ac_priority
										},
										function(rep) {
											$('#add_new_account').removeClass("disabled");
											if (rep.notif == "account_added") {
												Materialize.toast("Nouveau compte ajouté", 5000);
												if ($('#account_table').children().first().children().last().html() == "<em>Vide</em>") {
													$('#account_table').html("");
												}
												if (ac_priority == "Principal") {
													$('.ac_priority').each(function() {
														$(this).html("Secondaire");
													});
												}
												$('#account_table').append(rep.tableHtml);
												$('#ac_priority').append(rep.selectHtml);
												$('#drop_accounts').prepend(rep.menuHtml);
												setup_menu();
												$('#return_from_new_account').trigger('click');
												prepare_ac_deletion();
											} else {
												if (rep.message == "name_already_exists") {
													becomesInvalid($('#name'));
													Materialize.toast("Vous possédez déjà un compte de ce nom", 5000);
												} else {
													Materialize.toast("Oops ... une erreur est survenue ...", 5000);
													console.log(rep.message);
												}
											}
										}
									);
									$('#new_account_form').submit();
								} else {
									Materialize.toast('Formulaire non valide', 5000);
								}
							});
						},
						complete: clean_overlay
					});
				} else {
					$(location).attr('href',"{{ path('su_account_mobile_account') }}");
				}
			});
			//----------------------------------------------------------------------------------------------------------
			
			prepare_cat_ligne();
			
			$(window).resize(function () {
				param_init();
			});
		});
	</script>
{% endblock %}